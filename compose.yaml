version: "3.9"

services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "${EUREKA_SERVER_PORT}:8761"
    environment:
      SERVER_PORT: ${EUREKA_SERVER_PORT}
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  resource-db:
    image: postgres:17-alpine
    container_name: resource-db
    environment:
      POSTGRES_DB: ${RESOURCE_DB}
      POSTGRES_USER: ${RESOURCE_DB_USER}
      POSTGRES_PASSWORD: ${RESOURCE_DB_PASSWORD}
    ports:
      - "${RESOURCE_DB_HOST_PORT}:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d
    networks:
      - microservices-net

  song-db:
    image: postgres:17-alpine
    container_name: song-db
    environment:
      POSTGRES_DB: ${SONG_DB}
      POSTGRES_USER: ${SONG_DB_USER}
      POSTGRES_PASSWORD: ${SONG_DB_PASSWORD}
    ports:
      - "${SONG_DB_HOST_PORT}:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d
    networks:
      - microservices-net

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    depends_on:
      - resource-db
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCE_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCE_DB_PASSWORD}
      SERVER_PORT: ${RESOURCE_SERVER_PORT}
      SONG_SERVICE_BASE_URL: ${SONG_SERVICE_BASE_URL}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
      API_GATEWAY_SERVER_PORT: ${API_GATEWAY_SERVER_PORT}
    networks:
      - microservices-net

  song-service:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    depends_on:
      - song-db
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SONG_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${SONG_DB_PASSWORD}
      SERVER_PORT: ${SONG_SERVER_PORT}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
    networks:
      - microservices-net

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    environment:
      SERVER_PORT: ${API_GATEWAY_SERVER_PORT}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
    ports:
      - "${API_GATEWAY_SERVER_PORT}:8080"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
